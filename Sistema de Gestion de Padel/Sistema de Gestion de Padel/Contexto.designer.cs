#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_de_Gestion_de_Padel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SistemaDeGestionDePadel")]
	public partial class ContextoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCancha(Cancha instance);
    partial void UpdateCancha(Cancha instance);
    partial void DeleteCancha(Cancha instance);
    partial void InsertClasificacion(Clasificacion instance);
    partial void UpdateClasificacion(Clasificacion instance);
    partial void DeleteClasificacion(Clasificacion instance);
    partial void InsertEquipos(Equipos instance);
    partial void UpdateEquipos(Equipos instance);
    partial void DeleteEquipos(Equipos instance);
    partial void InsertHistorial(Historial instance);
    partial void UpdateHistorial(Historial instance);
    partial void DeleteHistorial(Historial instance);
    partial void InsertLocalidadP(LocalidadP instance);
    partial void UpdateLocalidadP(LocalidadP instance);
    partial void DeleteLocalidadP(LocalidadP instance);
    partial void InsertPartidos(Partidos instance);
    partial void UpdatePartidos(Partidos instance);
    partial void DeletePartidos(Partidos instance);
    partial void InsertPersonasPad(PersonasPad instance);
    partial void UpdatePersonasPad(PersonasPad instance);
    partial void DeletePersonasPad(PersonasPad instance);
    partial void InsertReservaCanPad(ReservaCanPad instance);
    partial void UpdateReservaCanPad(ReservaCanPad instance);
    partial void DeleteReservaCanPad(ReservaCanPad instance);
    partial void InsertTorneo(Torneo instance);
    partial void UpdateTorneo(Torneo instance);
    partial void DeleteTorneo(Torneo instance);
    partial void InsertTurnoFijoCanPad(TurnoFijoCanPad instance);
    partial void UpdateTurnoFijoCanPad(TurnoFijoCanPad instance);
    partial void DeleteTurnoFijoCanPad(TurnoFijoCanPad instance);
    #endregion
		
		public ContextoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SistemaDeGestionDePadelConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ContextoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cancha> Cancha
		{
			get
			{
				return this.GetTable<Cancha>();
			}
		}
		
		public System.Data.Linq.Table<Clasificacion> Clasificacion
		{
			get
			{
				return this.GetTable<Clasificacion>();
			}
		}
		
		public System.Data.Linq.Table<Equipos> Equipos
		{
			get
			{
				return this.GetTable<Equipos>();
			}
		}
		
		public System.Data.Linq.Table<Historial> Historial
		{
			get
			{
				return this.GetTable<Historial>();
			}
		}
		
		public System.Data.Linq.Table<LocalidadP> LocalidadP
		{
			get
			{
				return this.GetTable<LocalidadP>();
			}
		}
		
		public System.Data.Linq.Table<Partidos> Partidos
		{
			get
			{
				return this.GetTable<Partidos>();
			}
		}
		
		public System.Data.Linq.Table<PersonasPad> PersonasPad
		{
			get
			{
				return this.GetTable<PersonasPad>();
			}
		}
		
		public System.Data.Linq.Table<ReservaCanPad> ReservaCanPad
		{
			get
			{
				return this.GetTable<ReservaCanPad>();
			}
		}
		
		public System.Data.Linq.Table<Torneo> Torneo
		{
			get
			{
				return this.GetTable<Torneo>();
			}
		}
		
		public System.Data.Linq.Table<TurnoFijoCanPad> TurnoFijoCanPad
		{
			get
			{
				return this.GetTable<TurnoFijoCanPad>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cancha")]
	public partial class Cancha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CanchaId;
		
		private string _CanchaDescripcion;
		
		private System.Nullable<short> _EstadoCancha;
		
		private System.Nullable<short> _Marca1;
		
		private System.Nullable<short> _Marca2;
		
		private EntitySet<ReservaCanPad> _ReservaCanPad;
		
		private EntitySet<TurnoFijoCanPad> _TurnoFijoCanPad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCanchaIdChanging(int value);
    partial void OnCanchaIdChanged();
    partial void OnCanchaDescripcionChanging(string value);
    partial void OnCanchaDescripcionChanged();
    partial void OnEstadoCanchaChanging(System.Nullable<short> value);
    partial void OnEstadoCanchaChanged();
    partial void OnMarca1Changing(System.Nullable<short> value);
    partial void OnMarca1Changed();
    partial void OnMarca2Changing(System.Nullable<short> value);
    partial void OnMarca2Changed();
    #endregion
		
		public Cancha()
		{
			this._ReservaCanPad = new EntitySet<ReservaCanPad>(new Action<ReservaCanPad>(this.attach_ReservaCanPad), new Action<ReservaCanPad>(this.detach_ReservaCanPad));
			this._TurnoFijoCanPad = new EntitySet<TurnoFijoCanPad>(new Action<TurnoFijoCanPad>(this.attach_TurnoFijoCanPad), new Action<TurnoFijoCanPad>(this.detach_TurnoFijoCanPad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanchaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CanchaId
		{
			get
			{
				return this._CanchaId;
			}
			set
			{
				if ((this._CanchaId != value))
				{
					this.OnCanchaIdChanging(value);
					this.SendPropertyChanging();
					this._CanchaId = value;
					this.SendPropertyChanged("CanchaId");
					this.OnCanchaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanchaDescripcion", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string CanchaDescripcion
		{
			get
			{
				return this._CanchaDescripcion;
			}
			set
			{
				if ((this._CanchaDescripcion != value))
				{
					this.OnCanchaDescripcionChanging(value);
					this.SendPropertyChanging();
					this._CanchaDescripcion = value;
					this.SendPropertyChanged("CanchaDescripcion");
					this.OnCanchaDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoCancha", DbType="SmallInt")]
		public System.Nullable<short> EstadoCancha
		{
			get
			{
				return this._EstadoCancha;
			}
			set
			{
				if ((this._EstadoCancha != value))
				{
					this.OnEstadoCanchaChanging(value);
					this.SendPropertyChanging();
					this._EstadoCancha = value;
					this.SendPropertyChanged("EstadoCancha");
					this.OnEstadoCanchaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca1", DbType="SmallInt")]
		public System.Nullable<short> Marca1
		{
			get
			{
				return this._Marca1;
			}
			set
			{
				if ((this._Marca1 != value))
				{
					this.OnMarca1Changing(value);
					this.SendPropertyChanging();
					this._Marca1 = value;
					this.SendPropertyChanged("Marca1");
					this.OnMarca1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca2", DbType="SmallInt")]
		public System.Nullable<short> Marca2
		{
			get
			{
				return this._Marca2;
			}
			set
			{
				if ((this._Marca2 != value))
				{
					this.OnMarca2Changing(value);
					this.SendPropertyChanging();
					this._Marca2 = value;
					this.SendPropertyChanged("Marca2");
					this.OnMarca2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cancha_ReservaCanPad", Storage="_ReservaCanPad", ThisKey="CanchaId", OtherKey="CanchaId")]
		public EntitySet<ReservaCanPad> ReservaCanPad
		{
			get
			{
				return this._ReservaCanPad;
			}
			set
			{
				this._ReservaCanPad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cancha_TurnoFijoCanPad", Storage="_TurnoFijoCanPad", ThisKey="CanchaId", OtherKey="CanchaId")]
		public EntitySet<TurnoFijoCanPad> TurnoFijoCanPad
		{
			get
			{
				return this._TurnoFijoCanPad;
			}
			set
			{
				this._TurnoFijoCanPad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReservaCanPad(ReservaCanPad entity)
		{
			this.SendPropertyChanging();
			entity.Cancha = this;
		}
		
		private void detach_ReservaCanPad(ReservaCanPad entity)
		{
			this.SendPropertyChanging();
			entity.Cancha = null;
		}
		
		private void attach_TurnoFijoCanPad(TurnoFijoCanPad entity)
		{
			this.SendPropertyChanging();
			entity.Cancha = this;
		}
		
		private void detach_TurnoFijoCanPad(TurnoFijoCanPad entity)
		{
			this.SendPropertyChanging();
			entity.Cancha = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clasificacion")]
	public partial class Clasificacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdClasificacion;
		
		private System.Nullable<int> _IdTorneo;
		
		private System.Nullable<int> _IdEquipo;
		
		private System.Nullable<int> _PG;
		
		private System.Nullable<int> _DS;
		
		private System.Nullable<int> _DG;
		
		private System.Nullable<int> _SF;
		
		private System.Nullable<int> _GF;
		
		private System.Nullable<int> _Puesto;
		
		private EntityRef<Equipos> _Equipos;
		
		private EntityRef<Torneo> _Torneo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClasificacionChanging(int value);
    partial void OnIdClasificacionChanged();
    partial void OnIdTorneoChanging(System.Nullable<int> value);
    partial void OnIdTorneoChanged();
    partial void OnIdEquipoChanging(System.Nullable<int> value);
    partial void OnIdEquipoChanged();
    partial void OnPGChanging(System.Nullable<int> value);
    partial void OnPGChanged();
    partial void OnDSChanging(System.Nullable<int> value);
    partial void OnDSChanged();
    partial void OnDGChanging(System.Nullable<int> value);
    partial void OnDGChanged();
    partial void OnSFChanging(System.Nullable<int> value);
    partial void OnSFChanged();
    partial void OnGFChanging(System.Nullable<int> value);
    partial void OnGFChanged();
    partial void OnPuestoChanging(System.Nullable<int> value);
    partial void OnPuestoChanged();
    #endregion
		
		public Clasificacion()
		{
			this._Equipos = default(EntityRef<Equipos>);
			this._Torneo = default(EntityRef<Torneo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClasificacion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdClasificacion
		{
			get
			{
				return this._IdClasificacion;
			}
			set
			{
				if ((this._IdClasificacion != value))
				{
					this.OnIdClasificacionChanging(value);
					this.SendPropertyChanging();
					this._IdClasificacion = value;
					this.SendPropertyChanged("IdClasificacion");
					this.OnIdClasificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTorneo", DbType="Int")]
		public System.Nullable<int> IdTorneo
		{
			get
			{
				return this._IdTorneo;
			}
			set
			{
				if ((this._IdTorneo != value))
				{
					if (this._Torneo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTorneoChanging(value);
					this.SendPropertyChanging();
					this._IdTorneo = value;
					this.SendPropertyChanged("IdTorneo");
					this.OnIdTorneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEquipo", DbType="Int")]
		public System.Nullable<int> IdEquipo
		{
			get
			{
				return this._IdEquipo;
			}
			set
			{
				if ((this._IdEquipo != value))
				{
					if (this._Equipos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEquipoChanging(value);
					this.SendPropertyChanging();
					this._IdEquipo = value;
					this.SendPropertyChanged("IdEquipo");
					this.OnIdEquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PG", DbType="Int")]
		public System.Nullable<int> PG
		{
			get
			{
				return this._PG;
			}
			set
			{
				if ((this._PG != value))
				{
					this.OnPGChanging(value);
					this.SendPropertyChanging();
					this._PG = value;
					this.SendPropertyChanged("PG");
					this.OnPGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS", DbType="Int")]
		public System.Nullable<int> DS
		{
			get
			{
				return this._DS;
			}
			set
			{
				if ((this._DS != value))
				{
					this.OnDSChanging(value);
					this.SendPropertyChanging();
					this._DS = value;
					this.SendPropertyChanged("DS");
					this.OnDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG", DbType="Int")]
		public System.Nullable<int> DG
		{
			get
			{
				return this._DG;
			}
			set
			{
				if ((this._DG != value))
				{
					this.OnDGChanging(value);
					this.SendPropertyChanging();
					this._DG = value;
					this.SendPropertyChanged("DG");
					this.OnDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SF", DbType="Int")]
		public System.Nullable<int> SF
		{
			get
			{
				return this._SF;
			}
			set
			{
				if ((this._SF != value))
				{
					this.OnSFChanging(value);
					this.SendPropertyChanging();
					this._SF = value;
					this.SendPropertyChanged("SF");
					this.OnSFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GF", DbType="Int")]
		public System.Nullable<int> GF
		{
			get
			{
				return this._GF;
			}
			set
			{
				if ((this._GF != value))
				{
					this.OnGFChanging(value);
					this.SendPropertyChanging();
					this._GF = value;
					this.SendPropertyChanged("GF");
					this.OnGFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Puesto", DbType="Int")]
		public System.Nullable<int> Puesto
		{
			get
			{
				return this._Puesto;
			}
			set
			{
				if ((this._Puesto != value))
				{
					this.OnPuestoChanging(value);
					this.SendPropertyChanging();
					this._Puesto = value;
					this.SendPropertyChanged("Puesto");
					this.OnPuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipos_Clasificacion", Storage="_Equipos", ThisKey="IdEquipo", OtherKey="EquipoId", IsForeignKey=true)]
		public Equipos Equipos
		{
			get
			{
				return this._Equipos.Entity;
			}
			set
			{
				Equipos previousValue = this._Equipos.Entity;
				if (((previousValue != value) 
							|| (this._Equipos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipos.Entity = null;
						previousValue.Clasificacion.Remove(this);
					}
					this._Equipos.Entity = value;
					if ((value != null))
					{
						value.Clasificacion.Add(this);
						this._IdEquipo = value.EquipoId;
					}
					else
					{
						this._IdEquipo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Torneo_Clasificacion", Storage="_Torneo", ThisKey="IdTorneo", OtherKey="TorneoId", IsForeignKey=true)]
		public Torneo Torneo
		{
			get
			{
				return this._Torneo.Entity;
			}
			set
			{
				Torneo previousValue = this._Torneo.Entity;
				if (((previousValue != value) 
							|| (this._Torneo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Torneo.Entity = null;
						previousValue.Clasificacion.Remove(this);
					}
					this._Torneo.Entity = value;
					if ((value != null))
					{
						value.Clasificacion.Add(this);
						this._IdTorneo = value.TorneoId;
					}
					else
					{
						this._IdTorneo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Torneo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipos")]
	public partial class Equipos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EquipoId;
		
		private int _TorneoId;
		
		private int _PrimerJugadorE;
		
		private int _SegundoJugadorE;
		
		private int _GrupoEquipo;
		
		private EntitySet<Clasificacion> _Clasificacion;
		
		private EntitySet<Partidos> _Partidos;
		
		private EntitySet<Partidos> _Partidos1;
		
		private EntitySet<Torneo> _Torneo1;
		
		private EntityRef<PersonasPad> _PersonasPad;
		
		private EntityRef<PersonasPad> _PersonasPad1;
		
		private EntityRef<Torneo> _Torneo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipoIdChanging(int value);
    partial void OnEquipoIdChanged();
    partial void OnTorneoIdChanging(int value);
    partial void OnTorneoIdChanged();
    partial void OnPrimerJugadorEChanging(int value);
    partial void OnPrimerJugadorEChanged();
    partial void OnSegundoJugadorEChanging(int value);
    partial void OnSegundoJugadorEChanged();
    partial void OnGrupoEquipoChanging(int value);
    partial void OnGrupoEquipoChanged();
    #endregion
		
		public Equipos()
		{
			this._Clasificacion = new EntitySet<Clasificacion>(new Action<Clasificacion>(this.attach_Clasificacion), new Action<Clasificacion>(this.detach_Clasificacion));
			this._Partidos = new EntitySet<Partidos>(new Action<Partidos>(this.attach_Partidos), new Action<Partidos>(this.detach_Partidos));
			this._Partidos1 = new EntitySet<Partidos>(new Action<Partidos>(this.attach_Partidos1), new Action<Partidos>(this.detach_Partidos1));
			this._Torneo1 = new EntitySet<Torneo>(new Action<Torneo>(this.attach_Torneo1), new Action<Torneo>(this.detach_Torneo1));
			this._PersonasPad = default(EntityRef<PersonasPad>);
			this._PersonasPad1 = default(EntityRef<PersonasPad>);
			this._Torneo = default(EntityRef<Torneo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EquipoId
		{
			get
			{
				return this._EquipoId;
			}
			set
			{
				if ((this._EquipoId != value))
				{
					this.OnEquipoIdChanging(value);
					this.SendPropertyChanging();
					this._EquipoId = value;
					this.SendPropertyChanged("EquipoId");
					this.OnEquipoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TorneoId", DbType="Int NOT NULL")]
		public int TorneoId
		{
			get
			{
				return this._TorneoId;
			}
			set
			{
				if ((this._TorneoId != value))
				{
					if (this._Torneo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTorneoIdChanging(value);
					this.SendPropertyChanging();
					this._TorneoId = value;
					this.SendPropertyChanged("TorneoId");
					this.OnTorneoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimerJugadorE", DbType="Int NOT NULL")]
		public int PrimerJugadorE
		{
			get
			{
				return this._PrimerJugadorE;
			}
			set
			{
				if ((this._PrimerJugadorE != value))
				{
					if (this._PersonasPad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimerJugadorEChanging(value);
					this.SendPropertyChanging();
					this._PrimerJugadorE = value;
					this.SendPropertyChanged("PrimerJugadorE");
					this.OnPrimerJugadorEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegundoJugadorE", DbType="Int NOT NULL")]
		public int SegundoJugadorE
		{
			get
			{
				return this._SegundoJugadorE;
			}
			set
			{
				if ((this._SegundoJugadorE != value))
				{
					if (this._PersonasPad1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegundoJugadorEChanging(value);
					this.SendPropertyChanging();
					this._SegundoJugadorE = value;
					this.SendPropertyChanged("SegundoJugadorE");
					this.OnSegundoJugadorEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrupoEquipo", DbType="Int NOT NULL")]
		public int GrupoEquipo
		{
			get
			{
				return this._GrupoEquipo;
			}
			set
			{
				if ((this._GrupoEquipo != value))
				{
					this.OnGrupoEquipoChanging(value);
					this.SendPropertyChanging();
					this._GrupoEquipo = value;
					this.SendPropertyChanged("GrupoEquipo");
					this.OnGrupoEquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipos_Clasificacion", Storage="_Clasificacion", ThisKey="EquipoId", OtherKey="IdEquipo")]
		public EntitySet<Clasificacion> Clasificacion
		{
			get
			{
				return this._Clasificacion;
			}
			set
			{
				this._Clasificacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipos_Partidos", Storage="_Partidos", ThisKey="EquipoId", OtherKey="PrimerEquipoId")]
		public EntitySet<Partidos> Partidos
		{
			get
			{
				return this._Partidos;
			}
			set
			{
				this._Partidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipos_Partidos1", Storage="_Partidos1", ThisKey="EquipoId", OtherKey="SegundoEquipoId")]
		public EntitySet<Partidos> Partidos1
		{
			get
			{
				return this._Partidos1;
			}
			set
			{
				this._Partidos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipos_Torneo", Storage="_Torneo1", ThisKey="EquipoId", OtherKey="IdGanador")]
		public EntitySet<Torneo> Torneo1
		{
			get
			{
				return this._Torneo1;
			}
			set
			{
				this._Torneo1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonasPad_Equipos", Storage="_PersonasPad", ThisKey="PrimerJugadorE", OtherKey="PersonasPadId", IsForeignKey=true)]
		public PersonasPad PersonasPad
		{
			get
			{
				return this._PersonasPad.Entity;
			}
			set
			{
				PersonasPad previousValue = this._PersonasPad.Entity;
				if (((previousValue != value) 
							|| (this._PersonasPad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonasPad.Entity = null;
						previousValue.Equipos.Remove(this);
					}
					this._PersonasPad.Entity = value;
					if ((value != null))
					{
						value.Equipos.Add(this);
						this._PrimerJugadorE = value.PersonasPadId;
					}
					else
					{
						this._PrimerJugadorE = default(int);
					}
					this.SendPropertyChanged("PersonasPad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonasPad_Equipos1", Storage="_PersonasPad1", ThisKey="SegundoJugadorE", OtherKey="PersonasPadId", IsForeignKey=true)]
		public PersonasPad PersonasPad1
		{
			get
			{
				return this._PersonasPad1.Entity;
			}
			set
			{
				PersonasPad previousValue = this._PersonasPad1.Entity;
				if (((previousValue != value) 
							|| (this._PersonasPad1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonasPad1.Entity = null;
						previousValue.Equipos1.Remove(this);
					}
					this._PersonasPad1.Entity = value;
					if ((value != null))
					{
						value.Equipos1.Add(this);
						this._SegundoJugadorE = value.PersonasPadId;
					}
					else
					{
						this._SegundoJugadorE = default(int);
					}
					this.SendPropertyChanged("PersonasPad1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Torneo_Equipos", Storage="_Torneo", ThisKey="TorneoId", OtherKey="TorneoId", IsForeignKey=true)]
		public Torneo Torneo
		{
			get
			{
				return this._Torneo.Entity;
			}
			set
			{
				Torneo previousValue = this._Torneo.Entity;
				if (((previousValue != value) 
							|| (this._Torneo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Torneo.Entity = null;
						previousValue.Equipos.Remove(this);
					}
					this._Torneo.Entity = value;
					if ((value != null))
					{
						value.Equipos.Add(this);
						this._TorneoId = value.TorneoId;
					}
					else
					{
						this._TorneoId = default(int);
					}
					this.SendPropertyChanged("Torneo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clasificacion(Clasificacion entity)
		{
			this.SendPropertyChanging();
			entity.Equipos = this;
		}
		
		private void detach_Clasificacion(Clasificacion entity)
		{
			this.SendPropertyChanging();
			entity.Equipos = null;
		}
		
		private void attach_Partidos(Partidos entity)
		{
			this.SendPropertyChanging();
			entity.Equipos = this;
		}
		
		private void detach_Partidos(Partidos entity)
		{
			this.SendPropertyChanging();
			entity.Equipos = null;
		}
		
		private void attach_Partidos1(Partidos entity)
		{
			this.SendPropertyChanging();
			entity.Equipos1 = this;
		}
		
		private void detach_Partidos1(Partidos entity)
		{
			this.SendPropertyChanging();
			entity.Equipos1 = null;
		}
		
		private void attach_Torneo1(Torneo entity)
		{
			this.SendPropertyChanging();
			entity.Equipos1 = this;
		}
		
		private void detach_Torneo1(Torneo entity)
		{
			this.SendPropertyChanging();
			entity.Equipos1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Historial")]
	public partial class Historial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistorialId;
		
		private System.DateTime _Fecha;
		
		private int _GananciasDiarias;
		
		private int _GananciasExtra;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistorialIdChanging(int value);
    partial void OnHistorialIdChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnGananciasDiariasChanging(int value);
    partial void OnGananciasDiariasChanged();
    partial void OnGananciasExtraChanging(int value);
    partial void OnGananciasExtraChanged();
    #endregion
		
		public Historial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistorialId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HistorialId
		{
			get
			{
				return this._HistorialId;
			}
			set
			{
				if ((this._HistorialId != value))
				{
					this.OnHistorialIdChanging(value);
					this.SendPropertyChanging();
					this._HistorialId = value;
					this.SendPropertyChanged("HistorialId");
					this.OnHistorialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GananciasDiarias", DbType="Int NOT NULL")]
		public int GananciasDiarias
		{
			get
			{
				return this._GananciasDiarias;
			}
			set
			{
				if ((this._GananciasDiarias != value))
				{
					this.OnGananciasDiariasChanging(value);
					this.SendPropertyChanging();
					this._GananciasDiarias = value;
					this.SendPropertyChanged("GananciasDiarias");
					this.OnGananciasDiariasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GananciasExtra", DbType="Int NOT NULL")]
		public int GananciasExtra
		{
			get
			{
				return this._GananciasExtra;
			}
			set
			{
				if ((this._GananciasExtra != value))
				{
					this.OnGananciasExtraChanging(value);
					this.SendPropertyChanging();
					this._GananciasExtra = value;
					this.SendPropertyChanged("GananciasExtra");
					this.OnGananciasExtraChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocalidadP")]
	public partial class LocalidadP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LocalidadPId;
		
		private string _NombreLocalidadP;
		
		private System.Nullable<short> _Marca1L;
		
		private System.Nullable<short> _Marca2L;
		
		private EntitySet<PersonasPad> _PersonasPad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocalidadPIdChanging(short value);
    partial void OnLocalidadPIdChanged();
    partial void OnNombreLocalidadPChanging(string value);
    partial void OnNombreLocalidadPChanged();
    partial void OnMarca1LChanging(System.Nullable<short> value);
    partial void OnMarca1LChanged();
    partial void OnMarca2LChanging(System.Nullable<short> value);
    partial void OnMarca2LChanged();
    #endregion
		
		public LocalidadP()
		{
			this._PersonasPad = new EntitySet<PersonasPad>(new Action<PersonasPad>(this.attach_PersonasPad), new Action<PersonasPad>(this.detach_PersonasPad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalidadPId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short LocalidadPId
		{
			get
			{
				return this._LocalidadPId;
			}
			set
			{
				if ((this._LocalidadPId != value))
				{
					this.OnLocalidadPIdChanging(value);
					this.SendPropertyChanging();
					this._LocalidadPId = value;
					this.SendPropertyChanged("LocalidadPId");
					this.OnLocalidadPIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreLocalidadP", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NombreLocalidadP
		{
			get
			{
				return this._NombreLocalidadP;
			}
			set
			{
				if ((this._NombreLocalidadP != value))
				{
					this.OnNombreLocalidadPChanging(value);
					this.SendPropertyChanging();
					this._NombreLocalidadP = value;
					this.SendPropertyChanged("NombreLocalidadP");
					this.OnNombreLocalidadPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca1L", DbType="SmallInt")]
		public System.Nullable<short> Marca1L
		{
			get
			{
				return this._Marca1L;
			}
			set
			{
				if ((this._Marca1L != value))
				{
					this.OnMarca1LChanging(value);
					this.SendPropertyChanging();
					this._Marca1L = value;
					this.SendPropertyChanged("Marca1L");
					this.OnMarca1LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca2L", DbType="SmallInt")]
		public System.Nullable<short> Marca2L
		{
			get
			{
				return this._Marca2L;
			}
			set
			{
				if ((this._Marca2L != value))
				{
					this.OnMarca2LChanging(value);
					this.SendPropertyChanging();
					this._Marca2L = value;
					this.SendPropertyChanged("Marca2L");
					this.OnMarca2LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocalidadP_PersonasPad", Storage="_PersonasPad", ThisKey="LocalidadPId", OtherKey="LocalidadPId")]
		public EntitySet<PersonasPad> PersonasPad
		{
			get
			{
				return this._PersonasPad;
			}
			set
			{
				this._PersonasPad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonasPad(PersonasPad entity)
		{
			this.SendPropertyChanging();
			entity.LocalidadP = this;
		}
		
		private void detach_PersonasPad(PersonasPad entity)
		{
			this.SendPropertyChanging();
			entity.LocalidadP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partidos")]
	public partial class Partidos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartidosId;
		
		private int _TorneoId;
		
		private int _PrimerEquipoId;
		
		private int _SegundoEquipoId;
		
		private int _Set1PE;
		
		private int _Set1SE;
		
		private int _Set2PE;
		
		private int _Set2SE;
		
		private int _Set3PE;
		
		private int _Set3SE;
		
		private int _SetGanadosPE;
		
		private int _SetGanadosSE;
		
		private int _SetPerdidosPE;
		
		private int _SetPerdidosSE;
		
		private int _GamesGanadosPE;
		
		private int _GamesGanadosSE;
		
		private int _GamesPerdidosPE;
		
		private int _GamesPerdidosSE;
		
		private int _TipoPartido;
		
		private EntityRef<Equipos> _Equipos;
		
		private EntityRef<Equipos> _Equipos1;
		
		private EntityRef<Torneo> _Torneo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartidosIdChanging(int value);
    partial void OnPartidosIdChanged();
    partial void OnTorneoIdChanging(int value);
    partial void OnTorneoIdChanged();
    partial void OnPrimerEquipoIdChanging(int value);
    partial void OnPrimerEquipoIdChanged();
    partial void OnSegundoEquipoIdChanging(int value);
    partial void OnSegundoEquipoIdChanged();
    partial void OnSet1PEChanging(int value);
    partial void OnSet1PEChanged();
    partial void OnSet1SEChanging(int value);
    partial void OnSet1SEChanged();
    partial void OnSet2PEChanging(int value);
    partial void OnSet2PEChanged();
    partial void OnSet2SEChanging(int value);
    partial void OnSet2SEChanged();
    partial void OnSet3PEChanging(int value);
    partial void OnSet3PEChanged();
    partial void OnSet3SEChanging(int value);
    partial void OnSet3SEChanged();
    partial void OnSetGanadosPEChanging(int value);
    partial void OnSetGanadosPEChanged();
    partial void OnSetGanadosSEChanging(int value);
    partial void OnSetGanadosSEChanged();
    partial void OnSetPerdidosPEChanging(int value);
    partial void OnSetPerdidosPEChanged();
    partial void OnSetPerdidosSEChanging(int value);
    partial void OnSetPerdidosSEChanged();
    partial void OnGamesGanadosPEChanging(int value);
    partial void OnGamesGanadosPEChanged();
    partial void OnGamesGanadosSEChanging(int value);
    partial void OnGamesGanadosSEChanged();
    partial void OnGamesPerdidosPEChanging(int value);
    partial void OnGamesPerdidosPEChanged();
    partial void OnGamesPerdidosSEChanging(int value);
    partial void OnGamesPerdidosSEChanged();
    partial void OnTipoPartidoChanging(int value);
    partial void OnTipoPartidoChanged();
    #endregion
		
		public Partidos()
		{
			this._Equipos = default(EntityRef<Equipos>);
			this._Equipos1 = default(EntityRef<Equipos>);
			this._Torneo = default(EntityRef<Torneo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartidosId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PartidosId
		{
			get
			{
				return this._PartidosId;
			}
			set
			{
				if ((this._PartidosId != value))
				{
					this.OnPartidosIdChanging(value);
					this.SendPropertyChanging();
					this._PartidosId = value;
					this.SendPropertyChanged("PartidosId");
					this.OnPartidosIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TorneoId", DbType="Int NOT NULL")]
		public int TorneoId
		{
			get
			{
				return this._TorneoId;
			}
			set
			{
				if ((this._TorneoId != value))
				{
					if (this._Torneo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTorneoIdChanging(value);
					this.SendPropertyChanging();
					this._TorneoId = value;
					this.SendPropertyChanged("TorneoId");
					this.OnTorneoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimerEquipoId", DbType="Int NOT NULL")]
		public int PrimerEquipoId
		{
			get
			{
				return this._PrimerEquipoId;
			}
			set
			{
				if ((this._PrimerEquipoId != value))
				{
					if (this._Equipos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimerEquipoIdChanging(value);
					this.SendPropertyChanging();
					this._PrimerEquipoId = value;
					this.SendPropertyChanged("PrimerEquipoId");
					this.OnPrimerEquipoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegundoEquipoId", DbType="Int NOT NULL")]
		public int SegundoEquipoId
		{
			get
			{
				return this._SegundoEquipoId;
			}
			set
			{
				if ((this._SegundoEquipoId != value))
				{
					if (this._Equipos1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegundoEquipoIdChanging(value);
					this.SendPropertyChanging();
					this._SegundoEquipoId = value;
					this.SendPropertyChanged("SegundoEquipoId");
					this.OnSegundoEquipoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set1PE", DbType="Int NOT NULL")]
		public int Set1PE
		{
			get
			{
				return this._Set1PE;
			}
			set
			{
				if ((this._Set1PE != value))
				{
					this.OnSet1PEChanging(value);
					this.SendPropertyChanging();
					this._Set1PE = value;
					this.SendPropertyChanged("Set1PE");
					this.OnSet1PEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set1SE", DbType="Int NOT NULL")]
		public int Set1SE
		{
			get
			{
				return this._Set1SE;
			}
			set
			{
				if ((this._Set1SE != value))
				{
					this.OnSet1SEChanging(value);
					this.SendPropertyChanging();
					this._Set1SE = value;
					this.SendPropertyChanged("Set1SE");
					this.OnSet1SEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set2PE", DbType="Int NOT NULL")]
		public int Set2PE
		{
			get
			{
				return this._Set2PE;
			}
			set
			{
				if ((this._Set2PE != value))
				{
					this.OnSet2PEChanging(value);
					this.SendPropertyChanging();
					this._Set2PE = value;
					this.SendPropertyChanged("Set2PE");
					this.OnSet2PEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set2SE", DbType="Int NOT NULL")]
		public int Set2SE
		{
			get
			{
				return this._Set2SE;
			}
			set
			{
				if ((this._Set2SE != value))
				{
					this.OnSet2SEChanging(value);
					this.SendPropertyChanging();
					this._Set2SE = value;
					this.SendPropertyChanged("Set2SE");
					this.OnSet2SEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set3PE", DbType="Int NOT NULL")]
		public int Set3PE
		{
			get
			{
				return this._Set3PE;
			}
			set
			{
				if ((this._Set3PE != value))
				{
					this.OnSet3PEChanging(value);
					this.SendPropertyChanging();
					this._Set3PE = value;
					this.SendPropertyChanged("Set3PE");
					this.OnSet3PEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set3SE", DbType="Int NOT NULL")]
		public int Set3SE
		{
			get
			{
				return this._Set3SE;
			}
			set
			{
				if ((this._Set3SE != value))
				{
					this.OnSet3SEChanging(value);
					this.SendPropertyChanging();
					this._Set3SE = value;
					this.SendPropertyChanged("Set3SE");
					this.OnSet3SEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetGanadosPE", DbType="Int NOT NULL")]
		public int SetGanadosPE
		{
			get
			{
				return this._SetGanadosPE;
			}
			set
			{
				if ((this._SetGanadosPE != value))
				{
					this.OnSetGanadosPEChanging(value);
					this.SendPropertyChanging();
					this._SetGanadosPE = value;
					this.SendPropertyChanged("SetGanadosPE");
					this.OnSetGanadosPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetGanadosSE", DbType="Int NOT NULL")]
		public int SetGanadosSE
		{
			get
			{
				return this._SetGanadosSE;
			}
			set
			{
				if ((this._SetGanadosSE != value))
				{
					this.OnSetGanadosSEChanging(value);
					this.SendPropertyChanging();
					this._SetGanadosSE = value;
					this.SendPropertyChanged("SetGanadosSE");
					this.OnSetGanadosSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetPerdidosPE", DbType="Int NOT NULL")]
		public int SetPerdidosPE
		{
			get
			{
				return this._SetPerdidosPE;
			}
			set
			{
				if ((this._SetPerdidosPE != value))
				{
					this.OnSetPerdidosPEChanging(value);
					this.SendPropertyChanging();
					this._SetPerdidosPE = value;
					this.SendPropertyChanged("SetPerdidosPE");
					this.OnSetPerdidosPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetPerdidosSE", DbType="Int NOT NULL")]
		public int SetPerdidosSE
		{
			get
			{
				return this._SetPerdidosSE;
			}
			set
			{
				if ((this._SetPerdidosSE != value))
				{
					this.OnSetPerdidosSEChanging(value);
					this.SendPropertyChanging();
					this._SetPerdidosSE = value;
					this.SendPropertyChanged("SetPerdidosSE");
					this.OnSetPerdidosSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamesGanadosPE", DbType="Int NOT NULL")]
		public int GamesGanadosPE
		{
			get
			{
				return this._GamesGanadosPE;
			}
			set
			{
				if ((this._GamesGanadosPE != value))
				{
					this.OnGamesGanadosPEChanging(value);
					this.SendPropertyChanging();
					this._GamesGanadosPE = value;
					this.SendPropertyChanged("GamesGanadosPE");
					this.OnGamesGanadosPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamesGanadosSE", DbType="Int NOT NULL")]
		public int GamesGanadosSE
		{
			get
			{
				return this._GamesGanadosSE;
			}
			set
			{
				if ((this._GamesGanadosSE != value))
				{
					this.OnGamesGanadosSEChanging(value);
					this.SendPropertyChanging();
					this._GamesGanadosSE = value;
					this.SendPropertyChanged("GamesGanadosSE");
					this.OnGamesGanadosSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamesPerdidosPE", DbType="Int NOT NULL")]
		public int GamesPerdidosPE
		{
			get
			{
				return this._GamesPerdidosPE;
			}
			set
			{
				if ((this._GamesPerdidosPE != value))
				{
					this.OnGamesPerdidosPEChanging(value);
					this.SendPropertyChanging();
					this._GamesPerdidosPE = value;
					this.SendPropertyChanged("GamesPerdidosPE");
					this.OnGamesPerdidosPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamesPerdidosSE", DbType="Int NOT NULL")]
		public int GamesPerdidosSE
		{
			get
			{
				return this._GamesPerdidosSE;
			}
			set
			{
				if ((this._GamesPerdidosSE != value))
				{
					this.OnGamesPerdidosSEChanging(value);
					this.SendPropertyChanging();
					this._GamesPerdidosSE = value;
					this.SendPropertyChanged("GamesPerdidosSE");
					this.OnGamesPerdidosSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoPartido", DbType="Int NOT NULL")]
		public int TipoPartido
		{
			get
			{
				return this._TipoPartido;
			}
			set
			{
				if ((this._TipoPartido != value))
				{
					this.OnTipoPartidoChanging(value);
					this.SendPropertyChanging();
					this._TipoPartido = value;
					this.SendPropertyChanged("TipoPartido");
					this.OnTipoPartidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipos_Partidos", Storage="_Equipos", ThisKey="PrimerEquipoId", OtherKey="EquipoId", IsForeignKey=true)]
		public Equipos Equipos
		{
			get
			{
				return this._Equipos.Entity;
			}
			set
			{
				Equipos previousValue = this._Equipos.Entity;
				if (((previousValue != value) 
							|| (this._Equipos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipos.Entity = null;
						previousValue.Partidos.Remove(this);
					}
					this._Equipos.Entity = value;
					if ((value != null))
					{
						value.Partidos.Add(this);
						this._PrimerEquipoId = value.EquipoId;
					}
					else
					{
						this._PrimerEquipoId = default(int);
					}
					this.SendPropertyChanged("Equipos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipos_Partidos1", Storage="_Equipos1", ThisKey="SegundoEquipoId", OtherKey="EquipoId", IsForeignKey=true)]
		public Equipos Equipos1
		{
			get
			{
				return this._Equipos1.Entity;
			}
			set
			{
				Equipos previousValue = this._Equipos1.Entity;
				if (((previousValue != value) 
							|| (this._Equipos1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipos1.Entity = null;
						previousValue.Partidos1.Remove(this);
					}
					this._Equipos1.Entity = value;
					if ((value != null))
					{
						value.Partidos1.Add(this);
						this._SegundoEquipoId = value.EquipoId;
					}
					else
					{
						this._SegundoEquipoId = default(int);
					}
					this.SendPropertyChanged("Equipos1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Torneo_Partidos", Storage="_Torneo", ThisKey="TorneoId", OtherKey="TorneoId", IsForeignKey=true)]
		public Torneo Torneo
		{
			get
			{
				return this._Torneo.Entity;
			}
			set
			{
				Torneo previousValue = this._Torneo.Entity;
				if (((previousValue != value) 
							|| (this._Torneo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Torneo.Entity = null;
						previousValue.Partidos.Remove(this);
					}
					this._Torneo.Entity = value;
					if ((value != null))
					{
						value.Partidos.Add(this);
						this._TorneoId = value.TorneoId;
					}
					else
					{
						this._TorneoId = default(int);
					}
					this.SendPropertyChanged("Torneo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonasPad")]
	public partial class PersonasPad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonasPadId;
		
		private int _PersonasPadDni;
		
		private string _PersonasPadNombre;
		
		private string _PersonasPAdApellido;
		
		private short _LocalidadPId;
		
		private string _PersonasPadTelefono;
		
		private System.Nullable<System.DateTime> _PersonasPadFecNac;
		
		private System.Nullable<short> _PersonasPadEstado;
		
		private System.Nullable<int> _PersonasPadDeuda;
		
		private System.Nullable<short> _PersonasPadMarca2;
		
		private EntitySet<Equipos> _Equipos;
		
		private EntitySet<Equipos> _Equipos1;
		
		private EntitySet<ReservaCanPad> _ReservaCanPad;
		
		private EntitySet<TurnoFijoCanPad> _TurnoFijoCanPad;
		
		private EntityRef<LocalidadP> _LocalidadP;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonasPadIdChanging(int value);
    partial void OnPersonasPadIdChanged();
    partial void OnPersonasPadDniChanging(int value);
    partial void OnPersonasPadDniChanged();
    partial void OnPersonasPadNombreChanging(string value);
    partial void OnPersonasPadNombreChanged();
    partial void OnPersonasPAdApellidoChanging(string value);
    partial void OnPersonasPAdApellidoChanged();
    partial void OnLocalidadPIdChanging(short value);
    partial void OnLocalidadPIdChanged();
    partial void OnPersonasPadTelefonoChanging(string value);
    partial void OnPersonasPadTelefonoChanged();
    partial void OnPersonasPadFecNacChanging(System.Nullable<System.DateTime> value);
    partial void OnPersonasPadFecNacChanged();
    partial void OnPersonasPadEstadoChanging(System.Nullable<short> value);
    partial void OnPersonasPadEstadoChanged();
    partial void OnPersonasPadDeudaChanging(System.Nullable<int> value);
    partial void OnPersonasPadDeudaChanged();
    partial void OnPersonasPadMarca2Changing(System.Nullable<short> value);
    partial void OnPersonasPadMarca2Changed();
    #endregion
		
		public PersonasPad()
		{
			this._Equipos = new EntitySet<Equipos>(new Action<Equipos>(this.attach_Equipos), new Action<Equipos>(this.detach_Equipos));
			this._Equipos1 = new EntitySet<Equipos>(new Action<Equipos>(this.attach_Equipos1), new Action<Equipos>(this.detach_Equipos1));
			this._ReservaCanPad = new EntitySet<ReservaCanPad>(new Action<ReservaCanPad>(this.attach_ReservaCanPad), new Action<ReservaCanPad>(this.detach_ReservaCanPad));
			this._TurnoFijoCanPad = new EntitySet<TurnoFijoCanPad>(new Action<TurnoFijoCanPad>(this.attach_TurnoFijoCanPad), new Action<TurnoFijoCanPad>(this.detach_TurnoFijoCanPad));
			this._LocalidadP = default(EntityRef<LocalidadP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PersonasPadId
		{
			get
			{
				return this._PersonasPadId;
			}
			set
			{
				if ((this._PersonasPadId != value))
				{
					this.OnPersonasPadIdChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadId = value;
					this.SendPropertyChanged("PersonasPadId");
					this.OnPersonasPadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadDni", DbType="Int NOT NULL")]
		public int PersonasPadDni
		{
			get
			{
				return this._PersonasPadDni;
			}
			set
			{
				if ((this._PersonasPadDni != value))
				{
					this.OnPersonasPadDniChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadDni = value;
					this.SendPropertyChanged("PersonasPadDni");
					this.OnPersonasPadDniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadNombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string PersonasPadNombre
		{
			get
			{
				return this._PersonasPadNombre;
			}
			set
			{
				if ((this._PersonasPadNombre != value))
				{
					this.OnPersonasPadNombreChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadNombre = value;
					this.SendPropertyChanged("PersonasPadNombre");
					this.OnPersonasPadNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPAdApellido", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string PersonasPAdApellido
		{
			get
			{
				return this._PersonasPAdApellido;
			}
			set
			{
				if ((this._PersonasPAdApellido != value))
				{
					this.OnPersonasPAdApellidoChanging(value);
					this.SendPropertyChanging();
					this._PersonasPAdApellido = value;
					this.SendPropertyChanged("PersonasPAdApellido");
					this.OnPersonasPAdApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalidadPId", DbType="SmallInt NOT NULL")]
		public short LocalidadPId
		{
			get
			{
				return this._LocalidadPId;
			}
			set
			{
				if ((this._LocalidadPId != value))
				{
					if (this._LocalidadP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocalidadPIdChanging(value);
					this.SendPropertyChanging();
					this._LocalidadPId = value;
					this.SendPropertyChanged("LocalidadPId");
					this.OnLocalidadPIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadTelefono", DbType="VarChar(40)")]
		public string PersonasPadTelefono
		{
			get
			{
				return this._PersonasPadTelefono;
			}
			set
			{
				if ((this._PersonasPadTelefono != value))
				{
					this.OnPersonasPadTelefonoChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadTelefono = value;
					this.SendPropertyChanged("PersonasPadTelefono");
					this.OnPersonasPadTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadFecNac", DbType="DateTime")]
		public System.Nullable<System.DateTime> PersonasPadFecNac
		{
			get
			{
				return this._PersonasPadFecNac;
			}
			set
			{
				if ((this._PersonasPadFecNac != value))
				{
					this.OnPersonasPadFecNacChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadFecNac = value;
					this.SendPropertyChanged("PersonasPadFecNac");
					this.OnPersonasPadFecNacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadEstado", DbType="SmallInt")]
		public System.Nullable<short> PersonasPadEstado
		{
			get
			{
				return this._PersonasPadEstado;
			}
			set
			{
				if ((this._PersonasPadEstado != value))
				{
					this.OnPersonasPadEstadoChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadEstado = value;
					this.SendPropertyChanged("PersonasPadEstado");
					this.OnPersonasPadEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadDeuda", DbType="Int")]
		public System.Nullable<int> PersonasPadDeuda
		{
			get
			{
				return this._PersonasPadDeuda;
			}
			set
			{
				if ((this._PersonasPadDeuda != value))
				{
					this.OnPersonasPadDeudaChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadDeuda = value;
					this.SendPropertyChanged("PersonasPadDeuda");
					this.OnPersonasPadDeudaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadMarca2", DbType="SmallInt")]
		public System.Nullable<short> PersonasPadMarca2
		{
			get
			{
				return this._PersonasPadMarca2;
			}
			set
			{
				if ((this._PersonasPadMarca2 != value))
				{
					this.OnPersonasPadMarca2Changing(value);
					this.SendPropertyChanging();
					this._PersonasPadMarca2 = value;
					this.SendPropertyChanged("PersonasPadMarca2");
					this.OnPersonasPadMarca2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonasPad_Equipos", Storage="_Equipos", ThisKey="PersonasPadId", OtherKey="PrimerJugadorE")]
		public EntitySet<Equipos> Equipos
		{
			get
			{
				return this._Equipos;
			}
			set
			{
				this._Equipos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonasPad_Equipos1", Storage="_Equipos1", ThisKey="PersonasPadId", OtherKey="SegundoJugadorE")]
		public EntitySet<Equipos> Equipos1
		{
			get
			{
				return this._Equipos1;
			}
			set
			{
				this._Equipos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonasPad_ReservaCanPad", Storage="_ReservaCanPad", ThisKey="PersonasPadId", OtherKey="PersonasPadId")]
		public EntitySet<ReservaCanPad> ReservaCanPad
		{
			get
			{
				return this._ReservaCanPad;
			}
			set
			{
				this._ReservaCanPad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonasPad_TurnoFijoCanPad", Storage="_TurnoFijoCanPad", ThisKey="PersonasPadId", OtherKey="PersonasPadId")]
		public EntitySet<TurnoFijoCanPad> TurnoFijoCanPad
		{
			get
			{
				return this._TurnoFijoCanPad;
			}
			set
			{
				this._TurnoFijoCanPad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocalidadP_PersonasPad", Storage="_LocalidadP", ThisKey="LocalidadPId", OtherKey="LocalidadPId", IsForeignKey=true)]
		public LocalidadP LocalidadP
		{
			get
			{
				return this._LocalidadP.Entity;
			}
			set
			{
				LocalidadP previousValue = this._LocalidadP.Entity;
				if (((previousValue != value) 
							|| (this._LocalidadP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocalidadP.Entity = null;
						previousValue.PersonasPad.Remove(this);
					}
					this._LocalidadP.Entity = value;
					if ((value != null))
					{
						value.PersonasPad.Add(this);
						this._LocalidadPId = value.LocalidadPId;
					}
					else
					{
						this._LocalidadPId = default(short);
					}
					this.SendPropertyChanged("LocalidadP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipos(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.PersonasPad = this;
		}
		
		private void detach_Equipos(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.PersonasPad = null;
		}
		
		private void attach_Equipos1(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.PersonasPad1 = this;
		}
		
		private void detach_Equipos1(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.PersonasPad1 = null;
		}
		
		private void attach_ReservaCanPad(ReservaCanPad entity)
		{
			this.SendPropertyChanging();
			entity.PersonasPad = this;
		}
		
		private void detach_ReservaCanPad(ReservaCanPad entity)
		{
			this.SendPropertyChanging();
			entity.PersonasPad = null;
		}
		
		private void attach_TurnoFijoCanPad(TurnoFijoCanPad entity)
		{
			this.SendPropertyChanging();
			entity.PersonasPad = this;
		}
		
		private void detach_TurnoFijoCanPad(TurnoFijoCanPad entity)
		{
			this.SendPropertyChanging();
			entity.PersonasPad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReservaCanPad")]
	public partial class ReservaCanPad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ReservaCanPadId;
		
		private System.Nullable<short> _ReservaCanPadDia;
		
		private System.Nullable<System.DateTime> _ReservaCanPadFecha;
		
		private System.Nullable<short> _ReservaCanPadHora;
		
		private int _PersonasPadId;
		
		private int _CanchaId;
		
		private System.Nullable<short> _ReservaCanPadEstado;
		
		private System.Nullable<short> _ReservaCanPadPago;
		
		private System.Nullable<short> _ReservaCanPadTipo;
		
		private System.Nullable<short> _ReservaCanPadMarca1;
		
		private System.Nullable<short> _ReservaCanPadMarca2;
		
		private System.Nullable<System.DateTime> _ReservaCanPadFechaPago;
		
		private EntityRef<Cancha> _Cancha;
		
		private EntityRef<PersonasPad> _PersonasPad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservaCanPadIdChanging(short value);
    partial void OnReservaCanPadIdChanged();
    partial void OnReservaCanPadDiaChanging(System.Nullable<short> value);
    partial void OnReservaCanPadDiaChanged();
    partial void OnReservaCanPadFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnReservaCanPadFechaChanged();
    partial void OnReservaCanPadHoraChanging(System.Nullable<short> value);
    partial void OnReservaCanPadHoraChanged();
    partial void OnPersonasPadIdChanging(int value);
    partial void OnPersonasPadIdChanged();
    partial void OnCanchaIdChanging(int value);
    partial void OnCanchaIdChanged();
    partial void OnReservaCanPadEstadoChanging(System.Nullable<short> value);
    partial void OnReservaCanPadEstadoChanged();
    partial void OnReservaCanPadPagoChanging(System.Nullable<short> value);
    partial void OnReservaCanPadPagoChanged();
    partial void OnReservaCanPadTipoChanging(System.Nullable<short> value);
    partial void OnReservaCanPadTipoChanged();
    partial void OnReservaCanPadMarca1Changing(System.Nullable<short> value);
    partial void OnReservaCanPadMarca1Changed();
    partial void OnReservaCanPadMarca2Changing(System.Nullable<short> value);
    partial void OnReservaCanPadMarca2Changed();
    partial void OnReservaCanPadFechaPagoChanging(System.Nullable<System.DateTime> value);
    partial void OnReservaCanPadFechaPagoChanged();
    #endregion
		
		public ReservaCanPad()
		{
			this._Cancha = default(EntityRef<Cancha>);
			this._PersonasPad = default(EntityRef<PersonasPad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ReservaCanPadId
		{
			get
			{
				return this._ReservaCanPadId;
			}
			set
			{
				if ((this._ReservaCanPadId != value))
				{
					this.OnReservaCanPadIdChanging(value);
					this.SendPropertyChanging();
					this._ReservaCanPadId = value;
					this.SendPropertyChanged("ReservaCanPadId");
					this.OnReservaCanPadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadDia", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadDia
		{
			get
			{
				return this._ReservaCanPadDia;
			}
			set
			{
				if ((this._ReservaCanPadDia != value))
				{
					this.OnReservaCanPadDiaChanging(value);
					this.SendPropertyChanging();
					this._ReservaCanPadDia = value;
					this.SendPropertyChanged("ReservaCanPadDia");
					this.OnReservaCanPadDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadFecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReservaCanPadFecha
		{
			get
			{
				return this._ReservaCanPadFecha;
			}
			set
			{
				if ((this._ReservaCanPadFecha != value))
				{
					this.OnReservaCanPadFechaChanging(value);
					this.SendPropertyChanging();
					this._ReservaCanPadFecha = value;
					this.SendPropertyChanged("ReservaCanPadFecha");
					this.OnReservaCanPadFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadHora", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadHora
		{
			get
			{
				return this._ReservaCanPadHora;
			}
			set
			{
				if ((this._ReservaCanPadHora != value))
				{
					this.OnReservaCanPadHoraChanging(value);
					this.SendPropertyChanging();
					this._ReservaCanPadHora = value;
					this.SendPropertyChanged("ReservaCanPadHora");
					this.OnReservaCanPadHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadId", DbType="Int NOT NULL")]
		public int PersonasPadId
		{
			get
			{
				return this._PersonasPadId;
			}
			set
			{
				if ((this._PersonasPadId != value))
				{
					if (this._PersonasPad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonasPadIdChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadId = value;
					this.SendPropertyChanged("PersonasPadId");
					this.OnPersonasPadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanchaId", DbType="Int NOT NULL")]
		public int CanchaId
		{
			get
			{
				return this._CanchaId;
			}
			set
			{
				if ((this._CanchaId != value))
				{
					if (this._Cancha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCanchaIdChanging(value);
					this.SendPropertyChanging();
					this._CanchaId = value;
					this.SendPropertyChanged("CanchaId");
					this.OnCanchaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadEstado", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadEstado
		{
			get
			{
				return this._ReservaCanPadEstado;
			}
			set
			{
				if ((this._ReservaCanPadEstado != value))
				{
					this.OnReservaCanPadEstadoChanging(value);
					this.SendPropertyChanging();
					this._ReservaCanPadEstado = value;
					this.SendPropertyChanged("ReservaCanPadEstado");
					this.OnReservaCanPadEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadPago", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadPago
		{
			get
			{
				return this._ReservaCanPadPago;
			}
			set
			{
				if ((this._ReservaCanPadPago != value))
				{
					this.OnReservaCanPadPagoChanging(value);
					this.SendPropertyChanging();
					this._ReservaCanPadPago = value;
					this.SendPropertyChanged("ReservaCanPadPago");
					this.OnReservaCanPadPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadTipo", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadTipo
		{
			get
			{
				return this._ReservaCanPadTipo;
			}
			set
			{
				if ((this._ReservaCanPadTipo != value))
				{
					this.OnReservaCanPadTipoChanging(value);
					this.SendPropertyChanging();
					this._ReservaCanPadTipo = value;
					this.SendPropertyChanged("ReservaCanPadTipo");
					this.OnReservaCanPadTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadMarca1", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadMarca1
		{
			get
			{
				return this._ReservaCanPadMarca1;
			}
			set
			{
				if ((this._ReservaCanPadMarca1 != value))
				{
					this.OnReservaCanPadMarca1Changing(value);
					this.SendPropertyChanging();
					this._ReservaCanPadMarca1 = value;
					this.SendPropertyChanged("ReservaCanPadMarca1");
					this.OnReservaCanPadMarca1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadMarca2", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadMarca2
		{
			get
			{
				return this._ReservaCanPadMarca2;
			}
			set
			{
				if ((this._ReservaCanPadMarca2 != value))
				{
					this.OnReservaCanPadMarca2Changing(value);
					this.SendPropertyChanging();
					this._ReservaCanPadMarca2 = value;
					this.SendPropertyChanged("ReservaCanPadMarca2");
					this.OnReservaCanPadMarca2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadFechaPago", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReservaCanPadFechaPago
		{
			get
			{
				return this._ReservaCanPadFechaPago;
			}
			set
			{
				if ((this._ReservaCanPadFechaPago != value))
				{
					this.OnReservaCanPadFechaPagoChanging(value);
					this.SendPropertyChanging();
					this._ReservaCanPadFechaPago = value;
					this.SendPropertyChanged("ReservaCanPadFechaPago");
					this.OnReservaCanPadFechaPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cancha_ReservaCanPad", Storage="_Cancha", ThisKey="CanchaId", OtherKey="CanchaId", IsForeignKey=true)]
		public Cancha Cancha
		{
			get
			{
				return this._Cancha.Entity;
			}
			set
			{
				Cancha previousValue = this._Cancha.Entity;
				if (((previousValue != value) 
							|| (this._Cancha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cancha.Entity = null;
						previousValue.ReservaCanPad.Remove(this);
					}
					this._Cancha.Entity = value;
					if ((value != null))
					{
						value.ReservaCanPad.Add(this);
						this._CanchaId = value.CanchaId;
					}
					else
					{
						this._CanchaId = default(int);
					}
					this.SendPropertyChanged("Cancha");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonasPad_ReservaCanPad", Storage="_PersonasPad", ThisKey="PersonasPadId", OtherKey="PersonasPadId", IsForeignKey=true)]
		public PersonasPad PersonasPad
		{
			get
			{
				return this._PersonasPad.Entity;
			}
			set
			{
				PersonasPad previousValue = this._PersonasPad.Entity;
				if (((previousValue != value) 
							|| (this._PersonasPad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonasPad.Entity = null;
						previousValue.ReservaCanPad.Remove(this);
					}
					this._PersonasPad.Entity = value;
					if ((value != null))
					{
						value.ReservaCanPad.Add(this);
						this._PersonasPadId = value.PersonasPadId;
					}
					else
					{
						this._PersonasPadId = default(int);
					}
					this.SendPropertyChanged("PersonasPad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Torneo")]
	public partial class Torneo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TorneoId;
		
		private string _NombreTorneo;
		
		private System.Nullable<System.DateTime> _FechaInicioTorneo;
		
		private System.Nullable<System.DateTime> _FechaFinTorneo;
		
		private System.Nullable<short> _Estado;
		
		private System.Nullable<int> _IdGanador;
		
		private EntitySet<Clasificacion> _Clasificacion;
		
		private EntitySet<Equipos> _Equipos;
		
		private EntitySet<Partidos> _Partidos;
		
		private EntityRef<Equipos> _Equipos1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTorneoIdChanging(int value);
    partial void OnTorneoIdChanged();
    partial void OnNombreTorneoChanging(string value);
    partial void OnNombreTorneoChanged();
    partial void OnFechaInicioTorneoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioTorneoChanged();
    partial void OnFechaFinTorneoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinTorneoChanged();
    partial void OnEstadoChanging(System.Nullable<short> value);
    partial void OnEstadoChanged();
    partial void OnIdGanadorChanging(System.Nullable<int> value);
    partial void OnIdGanadorChanged();
    #endregion
		
		public Torneo()
		{
			this._Clasificacion = new EntitySet<Clasificacion>(new Action<Clasificacion>(this.attach_Clasificacion), new Action<Clasificacion>(this.detach_Clasificacion));
			this._Equipos = new EntitySet<Equipos>(new Action<Equipos>(this.attach_Equipos), new Action<Equipos>(this.detach_Equipos));
			this._Partidos = new EntitySet<Partidos>(new Action<Partidos>(this.attach_Partidos), new Action<Partidos>(this.detach_Partidos));
			this._Equipos1 = default(EntityRef<Equipos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TorneoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TorneoId
		{
			get
			{
				return this._TorneoId;
			}
			set
			{
				if ((this._TorneoId != value))
				{
					this.OnTorneoIdChanging(value);
					this.SendPropertyChanging();
					this._TorneoId = value;
					this.SendPropertyChanged("TorneoId");
					this.OnTorneoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreTorneo", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NombreTorneo
		{
			get
			{
				return this._NombreTorneo;
			}
			set
			{
				if ((this._NombreTorneo != value))
				{
					this.OnNombreTorneoChanging(value);
					this.SendPropertyChanging();
					this._NombreTorneo = value;
					this.SendPropertyChanged("NombreTorneo");
					this.OnNombreTorneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicioTorneo", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicioTorneo
		{
			get
			{
				return this._FechaInicioTorneo;
			}
			set
			{
				if ((this._FechaInicioTorneo != value))
				{
					this.OnFechaInicioTorneoChanging(value);
					this.SendPropertyChanging();
					this._FechaInicioTorneo = value;
					this.SendPropertyChanged("FechaInicioTorneo");
					this.OnFechaInicioTorneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFinTorneo", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaFinTorneo
		{
			get
			{
				return this._FechaFinTorneo;
			}
			set
			{
				if ((this._FechaFinTorneo != value))
				{
					this.OnFechaFinTorneoChanging(value);
					this.SendPropertyChanging();
					this._FechaFinTorneo = value;
					this.SendPropertyChanged("FechaFinTorneo");
					this.OnFechaFinTorneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="SmallInt")]
		public System.Nullable<short> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGanador", DbType="Int")]
		public System.Nullable<int> IdGanador
		{
			get
			{
				return this._IdGanador;
			}
			set
			{
				if ((this._IdGanador != value))
				{
					if (this._Equipos1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGanadorChanging(value);
					this.SendPropertyChanging();
					this._IdGanador = value;
					this.SendPropertyChanged("IdGanador");
					this.OnIdGanadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Torneo_Clasificacion", Storage="_Clasificacion", ThisKey="TorneoId", OtherKey="IdTorneo")]
		public EntitySet<Clasificacion> Clasificacion
		{
			get
			{
				return this._Clasificacion;
			}
			set
			{
				this._Clasificacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Torneo_Equipos", Storage="_Equipos", ThisKey="TorneoId", OtherKey="TorneoId")]
		public EntitySet<Equipos> Equipos
		{
			get
			{
				return this._Equipos;
			}
			set
			{
				this._Equipos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Torneo_Partidos", Storage="_Partidos", ThisKey="TorneoId", OtherKey="TorneoId")]
		public EntitySet<Partidos> Partidos
		{
			get
			{
				return this._Partidos;
			}
			set
			{
				this._Partidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipos_Torneo", Storage="_Equipos1", ThisKey="IdGanador", OtherKey="EquipoId", IsForeignKey=true)]
		public Equipos Equipos1
		{
			get
			{
				return this._Equipos1.Entity;
			}
			set
			{
				Equipos previousValue = this._Equipos1.Entity;
				if (((previousValue != value) 
							|| (this._Equipos1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipos1.Entity = null;
						previousValue.Torneo1.Remove(this);
					}
					this._Equipos1.Entity = value;
					if ((value != null))
					{
						value.Torneo1.Add(this);
						this._IdGanador = value.EquipoId;
					}
					else
					{
						this._IdGanador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipos1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clasificacion(Clasificacion entity)
		{
			this.SendPropertyChanging();
			entity.Torneo = this;
		}
		
		private void detach_Clasificacion(Clasificacion entity)
		{
			this.SendPropertyChanging();
			entity.Torneo = null;
		}
		
		private void attach_Equipos(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.Torneo = this;
		}
		
		private void detach_Equipos(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.Torneo = null;
		}
		
		private void attach_Partidos(Partidos entity)
		{
			this.SendPropertyChanging();
			entity.Torneo = this;
		}
		
		private void detach_Partidos(Partidos entity)
		{
			this.SendPropertyChanging();
			entity.Torneo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TurnoFijoCanPad")]
	public partial class TurnoFijoCanPad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TurnoFijoCanPadId;
		
		private System.Nullable<short> _TurnoFijoCanPadDia;
		
		private System.Nullable<System.DateTime> _TurnoFijoCanPadFecha;
		
		private System.Nullable<short> _TurnoFijoCanPadHora;
		
		private int _PersonasPadId;
		
		private int _CanchaId;
		
		private System.Nullable<short> _TurnoFijoCanPadEstado;
		
		private System.Nullable<short> _ReservaCanPadMarca1;
		
		private System.Nullable<short> _ReservaCanPadMarca2;
		
		private EntityRef<Cancha> _Cancha;
		
		private EntityRef<PersonasPad> _PersonasPad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTurnoFijoCanPadIdChanging(int value);
    partial void OnTurnoFijoCanPadIdChanged();
    partial void OnTurnoFijoCanPadDiaChanging(System.Nullable<short> value);
    partial void OnTurnoFijoCanPadDiaChanged();
    partial void OnTurnoFijoCanPadFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnTurnoFijoCanPadFechaChanged();
    partial void OnTurnoFijoCanPadHoraChanging(System.Nullable<short> value);
    partial void OnTurnoFijoCanPadHoraChanged();
    partial void OnPersonasPadIdChanging(int value);
    partial void OnPersonasPadIdChanged();
    partial void OnCanchaIdChanging(int value);
    partial void OnCanchaIdChanged();
    partial void OnTurnoFijoCanPadEstadoChanging(System.Nullable<short> value);
    partial void OnTurnoFijoCanPadEstadoChanged();
    partial void OnReservaCanPadMarca1Changing(System.Nullable<short> value);
    partial void OnReservaCanPadMarca1Changed();
    partial void OnReservaCanPadMarca2Changing(System.Nullable<short> value);
    partial void OnReservaCanPadMarca2Changed();
    #endregion
		
		public TurnoFijoCanPad()
		{
			this._Cancha = default(EntityRef<Cancha>);
			this._PersonasPad = default(EntityRef<PersonasPad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnoFijoCanPadId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TurnoFijoCanPadId
		{
			get
			{
				return this._TurnoFijoCanPadId;
			}
			set
			{
				if ((this._TurnoFijoCanPadId != value))
				{
					this.OnTurnoFijoCanPadIdChanging(value);
					this.SendPropertyChanging();
					this._TurnoFijoCanPadId = value;
					this.SendPropertyChanged("TurnoFijoCanPadId");
					this.OnTurnoFijoCanPadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnoFijoCanPadDia", DbType="SmallInt")]
		public System.Nullable<short> TurnoFijoCanPadDia
		{
			get
			{
				return this._TurnoFijoCanPadDia;
			}
			set
			{
				if ((this._TurnoFijoCanPadDia != value))
				{
					this.OnTurnoFijoCanPadDiaChanging(value);
					this.SendPropertyChanging();
					this._TurnoFijoCanPadDia = value;
					this.SendPropertyChanged("TurnoFijoCanPadDia");
					this.OnTurnoFijoCanPadDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnoFijoCanPadFecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> TurnoFijoCanPadFecha
		{
			get
			{
				return this._TurnoFijoCanPadFecha;
			}
			set
			{
				if ((this._TurnoFijoCanPadFecha != value))
				{
					this.OnTurnoFijoCanPadFechaChanging(value);
					this.SendPropertyChanging();
					this._TurnoFijoCanPadFecha = value;
					this.SendPropertyChanged("TurnoFijoCanPadFecha");
					this.OnTurnoFijoCanPadFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnoFijoCanPadHora", DbType="SmallInt")]
		public System.Nullable<short> TurnoFijoCanPadHora
		{
			get
			{
				return this._TurnoFijoCanPadHora;
			}
			set
			{
				if ((this._TurnoFijoCanPadHora != value))
				{
					this.OnTurnoFijoCanPadHoraChanging(value);
					this.SendPropertyChanging();
					this._TurnoFijoCanPadHora = value;
					this.SendPropertyChanged("TurnoFijoCanPadHora");
					this.OnTurnoFijoCanPadHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonasPadId", DbType="Int NOT NULL")]
		public int PersonasPadId
		{
			get
			{
				return this._PersonasPadId;
			}
			set
			{
				if ((this._PersonasPadId != value))
				{
					if (this._PersonasPad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonasPadIdChanging(value);
					this.SendPropertyChanging();
					this._PersonasPadId = value;
					this.SendPropertyChanged("PersonasPadId");
					this.OnPersonasPadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanchaId", DbType="Int NOT NULL")]
		public int CanchaId
		{
			get
			{
				return this._CanchaId;
			}
			set
			{
				if ((this._CanchaId != value))
				{
					if (this._Cancha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCanchaIdChanging(value);
					this.SendPropertyChanging();
					this._CanchaId = value;
					this.SendPropertyChanged("CanchaId");
					this.OnCanchaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnoFijoCanPadEstado", DbType="SmallInt")]
		public System.Nullable<short> TurnoFijoCanPadEstado
		{
			get
			{
				return this._TurnoFijoCanPadEstado;
			}
			set
			{
				if ((this._TurnoFijoCanPadEstado != value))
				{
					this.OnTurnoFijoCanPadEstadoChanging(value);
					this.SendPropertyChanging();
					this._TurnoFijoCanPadEstado = value;
					this.SendPropertyChanged("TurnoFijoCanPadEstado");
					this.OnTurnoFijoCanPadEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadMarca1", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadMarca1
		{
			get
			{
				return this._ReservaCanPadMarca1;
			}
			set
			{
				if ((this._ReservaCanPadMarca1 != value))
				{
					this.OnReservaCanPadMarca1Changing(value);
					this.SendPropertyChanging();
					this._ReservaCanPadMarca1 = value;
					this.SendPropertyChanged("ReservaCanPadMarca1");
					this.OnReservaCanPadMarca1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservaCanPadMarca2", DbType="SmallInt")]
		public System.Nullable<short> ReservaCanPadMarca2
		{
			get
			{
				return this._ReservaCanPadMarca2;
			}
			set
			{
				if ((this._ReservaCanPadMarca2 != value))
				{
					this.OnReservaCanPadMarca2Changing(value);
					this.SendPropertyChanging();
					this._ReservaCanPadMarca2 = value;
					this.SendPropertyChanged("ReservaCanPadMarca2");
					this.OnReservaCanPadMarca2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cancha_TurnoFijoCanPad", Storage="_Cancha", ThisKey="CanchaId", OtherKey="CanchaId", IsForeignKey=true)]
		public Cancha Cancha
		{
			get
			{
				return this._Cancha.Entity;
			}
			set
			{
				Cancha previousValue = this._Cancha.Entity;
				if (((previousValue != value) 
							|| (this._Cancha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cancha.Entity = null;
						previousValue.TurnoFijoCanPad.Remove(this);
					}
					this._Cancha.Entity = value;
					if ((value != null))
					{
						value.TurnoFijoCanPad.Add(this);
						this._CanchaId = value.CanchaId;
					}
					else
					{
						this._CanchaId = default(int);
					}
					this.SendPropertyChanged("Cancha");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonasPad_TurnoFijoCanPad", Storage="_PersonasPad", ThisKey="PersonasPadId", OtherKey="PersonasPadId", IsForeignKey=true)]
		public PersonasPad PersonasPad
		{
			get
			{
				return this._PersonasPad.Entity;
			}
			set
			{
				PersonasPad previousValue = this._PersonasPad.Entity;
				if (((previousValue != value) 
							|| (this._PersonasPad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonasPad.Entity = null;
						previousValue.TurnoFijoCanPad.Remove(this);
					}
					this._PersonasPad.Entity = value;
					if ((value != null))
					{
						value.TurnoFijoCanPad.Add(this);
						this._PersonasPadId = value.PersonasPadId;
					}
					else
					{
						this._PersonasPadId = default(int);
					}
					this.SendPropertyChanged("PersonasPad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
